runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readr)
simulation_path <- "D:\Documents\autem\benchmark\simulations\Battle_000100.csv"
simulation_path <- "D:\\Documents\\autem\\benchmark\\simulations\\Battle_000100.csv"
read_csv(simulation_path)
source('~/.active-rstudio-document', echo=TRUE)
simulation_path <- "D:\\Documents\\autem\\benchmark\\simulations\\balance-scale_1_select"
simulation_files = list.files(simulation_path, "Battle_*.csv")
simulation_files
list.files(simulation_path, "Battle_*.csv")
list.files(simulation_path)
list.files(simulation_path, "Battle*")
list.files(simulation_path, "Battle*.csv")
list.files(simulation_path, "Battle*\.csv")
list.files(simulation_path, "Battle*\\.csv")
list.files(simulation_path, "Battle*.csv")
list.files(simulation_path, "Battle*")
library(dplyr)
source('~/.active-rstudio-document', echo=TRUE)
suppressWarnings(load_battle(test_path, "Battle_000100.csv"))
suppressMessages(load_battle(test_path, "Battle_000100.csv"))
load_battle <- function(path, filename) {
battle_path <- file.path(path, filename)
df <- suppressMessages(read_csv(battle_path))
df
}
load_battle(test_path, "Battle_000100.csv")
test_files
library(readr)
library(tidyverse)
library(readr)
test_path <- "D:\\Documents\\autem\\benchmark\\simulations\\balance-scale_1_select"
test_files <- list.files(simulation_path, "Battle*")
test_files %>% purrr::map2_dfr(~ load_battle(test_path, .))
purrr::map_dfr(test_files, ~ load_battle(test_path, .))
source('~/.active-rstudio-document', echo=TRUE)
df <- load_battle(test_path)
df
df %>% summarise(step = step, births = cumsum(birth))
df %>% group_by(step) %>% summarise(step = step, births = cumsum(birth))
df %>% group_by(step) %>% summarise(births = cumsum(birth))
df %>% group_by(step) %>% mutate(births = cumsum(birth))
df %>% group_by(step) %>% mutate(births = cumsum(birth)) %>% select(step, births)
df %>% group_by(step) %>% mutate(
births = cumsum(birth),
deaths = cumsum(death),
hubbahs = cumsum(attractive)
) %>%
select(step, births, deaths, incarnations, hubbahs)
df %>% group_by(step) %>% mutate(
births = cumsum(birth),
deaths = cumsum(death),
hubbahs = cumsum(attractive)
) %>%
select(step, births, deaths, hubbahs)
df %>% group_by(step) %>% mutate(
births = cumsum(birth),
deaths = cumsum(death),
hubbahs = cumsum(attractive)
) %>%
select(step, births, deaths, hubbahs) %>%
View()
df %>% mutate(
births = cumsum(birth),
deaths = cumsum(death),
hubbahs = cumsum(attractive)
) %>%
select(step, births, deaths, hubbahs) %>%
View()
source('~/autem/dashboard/simulations.R', echo=TRUE)
source('~/autem/dashboard/simulations.R', echo=TRUE)
progress_df %>%
ggplot(aes(x = step)) +
geom_line(aes(y = births, color = "births")) +
geom_line(aes(y = deaths)) +
geom_line(aes(y = hubbahs))
progress_df %>%
ggplot(aes(x = step)) +
geom_line(aes(y = births, color = "births")) +
geom_line(aes(y = deaths, color = "deaths")) +
geom_line(aes(y = hubbahs, color = "hubbahs"))
source('~/autem/dashboard/simulations.R', echo=TRUE)
source("simulations.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/autem/dashboard/simulations.R', echo=TRUE)
test_dir <- "D:\\Documents\\autem\\benchmark\\simulations"
test_dir
test_dir
load_simulations_df(test_dir)
source('~/autem/dashboard/simulations.R', echo=TRUE)
source('~/autem/dashboard/simulations.R')
source('~/autem/dashboard/simulations.R')
load_simulations_df(test_dir)
source('~/autem/dashboard/simulations.R', echo=TRUE)
source('~/autem/dashboard/simulations.R')
load_simulations_df(test_dir)
runApp()
runApp()
runApp()
runApp()
body <- dashboardBody(
fluidRow(
column(width = 4,
box(
title = "Events",
"Box content"
),
box(
title = "Title 1", width = NULL, solidHeader = TRUE, status = "primary",
"Box content"
),
box(
width = NULL, background = "black",
"A box with a solid black background"
)
),
column(width = 4,
box(
status = "warning", width = NULL,
"Box content"
),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
runApp()
test_df
test_df$step
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
list.dirs("D:\\Documents\\autem\\benchmark\\simulations)
list.dirs("D:\\Documents\\autem\\benchmark\\simulations")
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE)
source('~/autem/dashboard/simulations.R')
load_simulations_df("D:\\Documents\\autem\\benchmark\\simulations")
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE)
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE) %>% purrr::discard("d")
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE) %>% purrr::discard(~ "d")
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE) %>% setdiff("")
load_simulations_df("D:\\Documents\\autem\\benchmark\\simulations")
source('~/autem/dashboard/simulations.R')
load_simulations_df("D:\\Documents\\autem\\benchmark\\simulations")
runApp()
source('~/autem/dashboard/simulations.R')
load_simulations_choices("D:\\Documents\\autem\\benchmark\\simulations")
source('~/autem/dashboard/simulations.R')
load_simulations_choices("D:\\Documents\\autem\\benchmark\\simulations")
load_simulation_choices()
load_simulation_choices("D:\\Documents\\autem\\benchmark\\simulations")
source('~/autem/dashboard/simulations.R')
load_simulation_choices("D:\\Documents\\autem\\benchmark\\simulations")
runApp()
runApp()
runApp()
runApp()
source('~/autem/dashboard/simulations.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
{
{
.doTrace(browser())
current_status <- status()
}
valueBox(paste0(current_status$steps), "Steps", color = "purple")
}
runApp()
runApp()
runApp()
runApp()
runApp()
test_path
path <- test_path
outline_path <- file.path(path, "Outline.csv")
outline_path
read_csv(outline_path)
read_csv(outline_path)
col_types <- cols(
name = col_character(),
dataset = col_character(),
role = col_character(),
label = col_character()
)
read_csv(outline_path, col_types = col_types)
read_csv(outline_path, col_names = FALSE, col_types = col_types)
read_csv(outline_path, col_names = TRUE, col_types = col_types)
?pull
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
install.packages("DT")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
source('~/autem/dashboard/simulations.R')
runApp()
source('~/autem/dashboard/simulations.R')
outline <- load_outline_df(test_path)
outline
ranking <- load_ranking_df(test_path)
ranking
tidyr::gather(ranking)
ranking %>% filter(step == max(step))
ranking %>% filter(step == max(step)) %>% gather()
ranking_df <- ranking
outline_df <- outline
last_rank <- ranking_df %>% filter(row_number()==n())
last_rank
properties <- outline_df %>% filter(dataset == "ranking" && role == "dimension")
properties
outline_df
outline_df %>% filter(dataset == "ranking")
outline_df %>% filter(dataset == "ranking", role == "dimension")
last_rank %>% tidyr::gather()
last_rank
last_rank <- ranking_df %>% filter(row_number()==n()) %>% tidyr::gather()
last_rank
properties
properties <- outline_df %>% filter(dataset == "ranking", role == "dimension")
properties
last_rank <- ranking_df %>% filter(row_number()==n()) %>% tidyr::gather("name")
last_rank
properties
last_rank %>% tidyr::gather() %>% dplyr::full_join(properties, by="name")
last_rank %>% dplyr::full_join(properties, by="name")
last_rank %>% dplyr::inner_join(properties, by="name")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
library(tidyverse)
library(readr)
df <- read_csv("D:\Documents\autem\benchmark\data\Preprocess vs Tune Battle 1.csv")
df <- read_csv("D:\\Documents\\autem\\benchmark\\data\\Preprocess vs Tune Battle 1.csv")
spec(df)
df
df %>% filter(experiment = "preprocess", seed = 1, simulation="balance-scale" )
df %>% filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" )
df %>% filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
select(step, accuracy, learner)
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner)
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner))
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner, size =1))
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner, size =.1))
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner, size = .01))
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner), size = 1)
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner), size = .5)
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner), size = 1)
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner), size = 1) +
ggtitle("balance-scale over accuracy progress")
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, color = learner), size = 1) +
ggtitle("balance-scale progress")
bs <- df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" )
bs <- df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" )
bs %>% filter(event == "final")
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(rank = max(rank))
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(rank == max(rank))
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final")
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking))
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
library(scales)
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats,percent(rating))
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, scales::percent_format(rating))
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating) %>% mutate(rating = percent_format(rating))
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating) %>% mutate(rating = scales::percent_format(rating))
rp <- df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
rp["rating"] <- percent_format(rp["rating"])
rp <- df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
rp
rp["rating"]
percent_format(rp["rating"])
percent(rp["rating"])
percent(rp[["rating"]])
df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, percent(rating))
rp <- df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
rp["rating"] <- percent(rp[["rating"]])
rp
baselines <- tribble(
~data, ~benchmark,
"balance-scale", 1,
"analcatdata_dmft", .215,
"Australian", .87,
"banknote-authentication", 0.99,
"blood-transfusion-service-center", 0.785,
"cmc", 0.575,
"diabetes", 0.77,
"ilpd", 0.73,
"JapaneseVowels", 0.99,
"LED-display-domain-7digit", 0.745,
"mfeat-morphological", 0.774,
"monks-problems-3", 0.989,
"phoneme", 0.91,
"segment", 0.99,
"tic-tac-toe", 0.99,
"vehicle", 0.84
)
baselines
rp <- df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
rp <- rp %>% inner_join(baselines, by = "data")
rp["rating"] <- percent(rp[["rating"]])
rp
rp <- df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
rp <- rp %>% inner_join(baselines, by = "data")
rp["rating"] <- percent(rp[["rating"]])
rp["benchmark"] <- percent(rp[["benchmark"]])
rp
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() + geom_point(aes(x = step, y = accuracy, shape =  color = learner), size = 1) +
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy))
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner)
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() +
geom_point(aes(x = step, y = accuracy, shape =  color = learner), size = 1) +
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() +
geom_point(aes(x = step, y = accuracy, color = learner), size = 1) +
ggtitle("balance-scale progress")
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() +
geom_point(aes(x = step, y = accuracy, color = learner), size = 1) +
ggtitle("balance-scale progress") +
xlab("Progress") +
ylab("Accuracy")
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() +
geom_point(aes(x = step, y = accuracy, color = learner), size = 1) +
ggtitle("balance-scale progress") +
xlab("Progress") +
ylab("Accuracy") +
theme_light()
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() +
geom_point(aes(x = step, y = accuracy, color = learner), size = 1) +
ggtitle("balance-scale progress") +
xlab("Progress") +
ylab("Accuracy") +
theme_light()
df %>%
filter(experiment == "preprocess", seed == 1, simulation =="balance-scale" ) %>%
filter(!is.na(accuracy)) %>%
select(step, accuracy, learner) %>%
ggplot() +
geom_point(aes(x = step, y = accuracy, color = learner), size = 1) +
ggtitle("balance-scale progress") +
xlab("Progress") +
ylab("Accuracy") +
theme_light()
rp <- df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
rp <- rp %>% inner_join(baselines, by = "data")
rp["rating"] <- percent(rp[["rating"]])
rp["benchmark"] <- percent(rp[["benchmark"]])
rp
rp <- df %>% filter(experiment == "preprocess", seed == 1) %>% filter(event == "final") %>% group_by(data) %>% filter(ranking == max(ranking)) %>% select(data, contests, standoffs, victories, defeats, rating)
rp <- rp %>% inner_join(baselines, by = "data")
rp["rating"] <- percent(rp[["rating"]])
rp["benchmark"] <- percent(rp[["benchmark"]])
print(rp)
print(rp)
print(rp %>% select(data, accuracy = rating, benchmark))
print(rp %>% select(data, accuracy = rating, benchmark))
677777777777777777777777777777777777777uuhyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyghjkftcccvrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrhgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihhgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgihgipo5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rtoo5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rtoo5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rtoo5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rtoo5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rto5rterrttttttttttttttttttttttttttttttttttttttttfffrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrtrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroeroersiowesssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssiowegttttttttttttttttttttttttttttttttt
