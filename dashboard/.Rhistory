install.packages("shinydashboard")
library(shiny)
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readr)
simulation_path <- "D:\Documents\autem\benchmark\simulations\Battle_000100.csv"
simulation_path <- "D:\\Documents\\autem\\benchmark\\simulations\\Battle_000100.csv"
read_csv(simulation_path)
source('~/.active-rstudio-document', echo=TRUE)
simulation_path <- "D:\\Documents\\autem\\benchmark\\simulations\\balance-scale_1_select"
simulation_files = list.files(simulation_path, "Battle_*.csv")
simulation_files
list.files(simulation_path, "Battle_*.csv")
list.files(simulation_path)
list.files(simulation_path, "Battle*")
list.files(simulation_path, "Battle*.csv")
list.files(simulation_path, "Battle*\.csv")
list.files(simulation_path, "Battle*\\.csv")
list.files(simulation_path, "Battle*.csv")
list.files(simulation_path, "Battle*")
library(dplyr)
source('~/.active-rstudio-document', echo=TRUE)
suppressWarnings(load_battle(test_path, "Battle_000100.csv"))
suppressMessages(load_battle(test_path, "Battle_000100.csv"))
load_battle <- function(path, filename) {
battle_path <- file.path(path, filename)
df <- suppressMessages(read_csv(battle_path))
df
}
load_battle(test_path, "Battle_000100.csv")
test_files
library(readr)
library(tidyverse)
library(readr)
test_path <- "D:\\Documents\\autem\\benchmark\\simulations\\balance-scale_1_select"
test_files <- list.files(simulation_path, "Battle*")
test_files %>% purrr::map2_dfr(~ load_battle(test_path, .))
purrr::map_dfr(test_files, ~ load_battle(test_path, .))
source('~/.active-rstudio-document', echo=TRUE)
df <- load_battle(test_path)
df
df %>% summarise(step = step, births = cumsum(birth))
df %>% group_by(step) %>% summarise(step = step, births = cumsum(birth))
df %>% group_by(step) %>% summarise(births = cumsum(birth))
df %>% group_by(step) %>% mutate(births = cumsum(birth))
df %>% group_by(step) %>% mutate(births = cumsum(birth)) %>% select(step, births)
df %>% group_by(step) %>% mutate(
births = cumsum(birth),
deaths = cumsum(death),
hubbahs = cumsum(attractive)
) %>%
select(step, births, deaths, incarnations, hubbahs)
df %>% group_by(step) %>% mutate(
births = cumsum(birth),
deaths = cumsum(death),
hubbahs = cumsum(attractive)
) %>%
select(step, births, deaths, hubbahs)
df %>% group_by(step) %>% mutate(
births = cumsum(birth),
deaths = cumsum(death),
hubbahs = cumsum(attractive)
) %>%
select(step, births, deaths, hubbahs) %>%
View()
df %>% mutate(
births = cumsum(birth),
deaths = cumsum(death),
hubbahs = cumsum(attractive)
) %>%
select(step, births, deaths, hubbahs) %>%
View()
source('~/autem/dashboard/simulations.R', echo=TRUE)
source('~/autem/dashboard/simulations.R', echo=TRUE)
progress_df %>%
ggplot(aes(x = step)) +
geom_line(aes(y = births, color = "births")) +
geom_line(aes(y = deaths)) +
geom_line(aes(y = hubbahs))
progress_df %>%
ggplot(aes(x = step)) +
geom_line(aes(y = births, color = "births")) +
geom_line(aes(y = deaths, color = "deaths")) +
geom_line(aes(y = hubbahs, color = "hubbahs"))
source('~/autem/dashboard/simulations.R', echo=TRUE)
source("simulations.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/autem/dashboard/simulations.R', echo=TRUE)
test_dir <- "D:\\Documents\\autem\\benchmark\\simulations"
test_dir
test_dir
load_simulations_df(test_dir)
source('~/autem/dashboard/simulations.R', echo=TRUE)
source('~/autem/dashboard/simulations.R')
source('~/autem/dashboard/simulations.R')
load_simulations_df(test_dir)
source('~/autem/dashboard/simulations.R', echo=TRUE)
source('~/autem/dashboard/simulations.R')
load_simulations_df(test_dir)
runApp()
runApp()
runApp()
runApp()
body <- dashboardBody(
fluidRow(
column(width = 4,
box(
title = "Events",
"Box content"
),
box(
title = "Title 1", width = NULL, solidHeader = TRUE, status = "primary",
"Box content"
),
box(
width = NULL, background = "black",
"A box with a solid black background"
)
),
column(width = 4,
box(
status = "warning", width = NULL,
"Box content"
),
box(
title = "Title 3", width = NULL, solidHeader = TRUE, status = "warning",
"Box content"
),
box(
title = "Title 5", width = NULL, background = "light-blue",
"A box with a solid light-blue background"
)
),
column(width = 4,
box(
title = "Title 2", width = NULL, solidHeader = TRUE,
"Box content"
),
box(
title = "Title 6", width = NULL, background = "maroon",
"A box with a solid maroon background"
)
)
)
)
runApp()
test_df
test_df$step
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
list.dirs("D:\\Documents\\autem\\benchmark\\simulations)
list.dirs("D:\\Documents\\autem\\benchmark\\simulations")
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE)
source('~/autem/dashboard/simulations.R')
load_simulations_df("D:\\Documents\\autem\\benchmark\\simulations")
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE)
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE) %>% purrr::discard("d")
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE) %>% purrr::discard(~ "d")
list.dirs("D:\\Documents\\autem\\benchmark\\simulations", full.names = FALSE) %>% setdiff("")
load_simulations_df("D:\\Documents\\autem\\benchmark\\simulations")
source('~/autem/dashboard/simulations.R')
load_simulations_df("D:\\Documents\\autem\\benchmark\\simulations")
runApp()
source('~/autem/dashboard/simulations.R')
load_simulations_choices("D:\\Documents\\autem\\benchmark\\simulations")
source('~/autem/dashboard/simulations.R')
load_simulations_choices("D:\\Documents\\autem\\benchmark\\simulations")
load_simulation_choices()
load_simulation_choices("D:\\Documents\\autem\\benchmark\\simulations")
source('~/autem/dashboard/simulations.R')
load_simulation_choices("D:\\Documents\\autem\\benchmark\\simulations")
runApp()
runApp()
runApp()
runApp()
source('~/autem/dashboard/simulations.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
{
{
.doTrace(browser())
current_status <- status()
}
valueBox(paste0(current_status$steps), "Steps", color = "purple")
}
runApp()
runApp()
runApp()
runApp()
runApp()
test_path
path <- test_path
outline_path <- file.path(path, "Outline.csv")
outline_path
read_csv(outline_path)
read_csv(outline_path)
col_types <- cols(
name = col_character(),
dataset = col_character(),
role = col_character(),
label = col_character()
)
read_csv(outline_path, col_types = col_types)
read_csv(outline_path, col_names = FALSE, col_types = col_types)
read_csv(outline_path, col_names = TRUE, col_types = col_types)
?pull
runApp()
runApp()
runApp()
runApp()
